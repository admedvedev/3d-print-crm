// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  name      String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // Relations
  printers  Printer[]
  filaments Filament[]
  clients   Client[]
  orders    Order[]
  settings  Settings[]

  @@map("users")
}

model Printer {
  id           String   @id @default(cuid())
  userId       String   @map("user_id")
  name         String
  power        Float
  cost         Float
  depreciation Float
  totalHours   Float    @map("total_hours")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")

  // Relations
  user   User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  orders Order[]

  @@map("printers")
}

model Filament {
  id        String   @id @default(cuid())
  userId    String   @map("user_id")
  name      String
  weight    Float
  cost      Float
  color     String
  inStock   Boolean  @default(true) @map("in_stock")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // Relations
  user   User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  orders Order[]

  @@map("filaments")
}

model Client {
  id        String   @id @default(cuid())
  userId    String   @map("user_id")
  name      String
  email     String
  phone     String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // Relations
  user   User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  orders Order[]

  @@map("clients")
}

model Order {
  id               String   @id @default(cuid())
  userId           String   @map("user_id")
  taskName         String   @map("task_name")
  clientId         String   @map("client_id")
  clientName       String   @map("client_name")
  printerId        String   @map("printer_id")
  printerName      String   @map("printer_name")
  filamentId       String   @map("filament_id")
  filamentName     String   @map("filament_name")
  printTimeHours   Int      @map("print_time_hours")
  printTimeMinutes Int      @map("print_time_minutes")
  weight           Float
  markup           Float
  status           String
  cost             Float
  date             DateTime
  createdAt        DateTime @default(now()) @map("created_at")
  updatedAt        DateTime @updatedAt @map("updated_at")

  // Relations
  user     User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  printer  Printer  @relation(fields: [printerId], references: [id], onDelete: Cascade)
  filament Filament @relation(fields: [filamentId], references: [id], onDelete: Cascade)
  client   Client   @relation(fields: [clientId], references: [id], onDelete: Cascade)

  @@map("orders")
}

model Settings {
  id             String   @id @default(cuid())
  userId         String   @map("user_id")
  electricityRate Float   @map("electricity_rate")
  currency       String
  defaultMarkup  Float    @map("default_markup")
  createdAt      DateTime @default(now()) @map("created_at")
  updatedAt      DateTime @updatedAt @map("updated_at")

  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("settings")
}