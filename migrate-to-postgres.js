#!/usr/bin/env node

const fs = require('fs');
const path = require('path');

console.log('üîÑ –ú–∏–≥—Ä–∞—Ü–∏—è —Å in-memory –Ω–∞ Postgres...\n');

// –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏
const filesToMigrate = [
  { old: 'users.js', new: 'users-postgres.js' },
  { old: 'printers.js', new: 'printers-postgres.js' },
  { old: 'filaments.js', new: 'filaments-postgres.js' },
  { old: 'clients.js', new: 'clients-postgres.js' },
  { old: 'orders.js', new: 'orders-postgres.js' },
  { old: 'settings.js', new: 'settings-postgres.js' }
];

const apiDir = path.join(__dirname, 'api');

// –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏ —Å—Ç–∞—Ä—ã—Ö —Ñ–∞–π–ª–æ–≤
console.log('üì¶ –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω—ã—Ö –∫–æ–ø–∏–π...');
filesToMigrate.forEach(({ old, new: newFile }) => {
  const oldPath = path.join(apiDir, old);
  const backupPath = path.join(apiDir, `${old}.backup`);
  
  if (fs.existsSync(oldPath)) {
    fs.copyFileSync(oldPath, backupPath);
    console.log(`  ‚úÖ ${old} ‚Üí ${old}.backup`);
  }
});

// –ó–∞–º–µ–Ω—è–µ–º —Ñ–∞–π–ª—ã
console.log('\nüîÑ –ó–∞–º–µ–Ω–∞ API endpoints...');
filesToMigrate.forEach(({ old, new: newFile }) => {
  const oldPath = path.join(apiDir, old);
  const newPath = path.join(apiDir, newFile);
  
  if (fs.existsSync(newPath)) {
    // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π —Ñ–∞–π–ª
    if (fs.existsSync(oldPath)) {
      fs.unlinkSync(oldPath);
    }
    
    // –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ–º –Ω–æ–≤—ã–π —Ñ–∞–π–ª
    fs.renameSync(newPath, oldPath);
    console.log(`  ‚úÖ ${newFile} ‚Üí ${old}`);
  } else {
    console.log(`  ‚ö†Ô∏è  ${newFile} –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º`);
  }
});

console.log('\n‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
console.log('\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:');
console.log('1. –°–æ–∑–¥–∞–π—Ç–µ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –≤ Vercel Dashboard');
console.log('2. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö: POST /api/init-db');
console.log('3. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ');
console.log('\nüíæ –†–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –ø–∞–ø–∫–µ api/ —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º .backup');
